"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4095],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||p[d]||s;return n?i.createElement(g,o(o({ref:t},u),{},{components:n})):i.createElement(g,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var c=2;c<s;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const s={sidebar_position:4,title:"Part 3: Unit Testing your code using Jest",sidebar_label:"Unit Testing (Jest)"},o=void 0,a={unversionedId:"labs/tooling/unit-testing",id:"labs/tooling/unit-testing",title:"Part 3: Unit Testing your code using Jest",description:"Installing Jest",source:"@site/content/coursework/labs/7.tooling/3.unit-testing.mdx",sourceDirName:"labs/7.tooling",slug:"/labs/tooling/unit-testing",permalink:"/IT3049C/coursework/labs/tooling/unit-testing",draft:!1,editUrl:"https://github.com/IT4063C/IT4063C.github.io/tree/main/content/coursework/labs/7.tooling/3.unit-testing.mdx",tags:[],version:"current",lastUpdatedBy:"Wes Reed",lastUpdatedAt:1687268004,formattedLastUpdatedAt:"Jun 20, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Part 3: Unit Testing your code using Jest",sidebar_label:"Unit Testing (Jest)"},sidebar:"coursework",previous:{title:"Transpiling (Webpack)",permalink:"/IT3049C/coursework/labs/tooling/transpile"},next:{title:"E2E Testing (Cypress)",permalink:"/IT3049C/coursework/labs/tooling/e2e-testing"}},l={},c=[{value:"Installing Jest",id:"installing-jest",level:2},{value:"Configuring",id:"configuring",level:2},{value:"About those Configurations",id:"about-those-configurations",level:4},{value:"Some More Project Configurations",id:"some-more-project-configurations",level:3},{value:"Write New Tests",id:"write-new-tests",level:3},{value:"Improving the Developer Experience with VSCode Extensions",id:"improving-the-developer-experience-with-vscode-extensions",level:2},{value:"Write more tests with Mocks",id:"write-more-tests-with-mocks",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installing-jest"},"Installing Jest"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install Jest from npm ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install --save-dev jest"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This step is already done for you as you install dependencies defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," by running ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install ")," in the beginning of the lab.")))),(0,r.kt)("h2",{id:"configuring"},"Configuring"),(0,r.kt)("p",null,"Generally, you wouldn't need a lot of configurations to get started with Jest. But because there are already some unit tests that are already included, and those tests require a bit of configuration, we'll go over some of the configurations that you might need to do."),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create the following configurations")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="jest.config.js"',title:'"jest.config.js"'},"module.exports = {\n  setupFilesAfterEnv: [\n    `regenerator-runtime/runtime`,\n    `@testing-library/jest-dom/extend-expect`,\n  ],\n  clearMocks: true,\n  testEnvironment: `node`,\n  watchPathIgnorePatterns: [`node_modules`],\n  testPathIgnorePatterns: [`node_modules`],\n};\n")),(0,r.kt)("h4",{id:"about-those-configurations"},"About those Configurations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"because of how I'm testing the DOM and how I'm using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@testing-library/dom")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"@testing-library/jest-dom")," libraries, I need to add ",(0,r.kt)("inlineCode",{parentName:"li"},"regenerator-runtime/runtime")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"@testing-library/jest-dom/extend-expect")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"setupFilesAfterEnv")," array. This extends the ",(0,r.kt)("inlineCode",{parentName:"li"},"expect")," function to include some useful assertions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"clearMocks")," is a boolean that tells Jest to clear the mocks after each test. This is useful if you have a lot of mocks and you want to make sure that you don't have any state that's left over from the previous test.",(0,r.kt)("admonition",{parentName:"li",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In this lab, I will show you how you can use Mock to mock out the ",(0,r.kt)("inlineCode",{parentName:"p"},"Math.random()")," function."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"testEnvironment")," is a string that tells Jest what environment to run the tests in. In this case, we're using ",(0,r.kt)("inlineCode",{parentName:"li"},"node")," because we're using Jest in a Node environment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"watchPathIgnorePatterns")," is an array of strings that tells Jest to ignore any files that match those patterns. This is useful if you have a lot of files and you don't want to run tests on them."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"testPathIgnorePatterns")," is an array of strings that tells Jest to ignore any files that match those patterns. This is useful if you have a lot of files and you don't want to run tests on them.")),(0,r.kt)("h3",{id:"some-more-project-configurations"},"Some More Project Configurations"),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/0.folderStructure.test.js")," file for example. If you had already installed the VSCode ESLint, you'll see that it's flagging some of the built-in jest functions.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"to fix that, we need to add the Jest env. to the eslint config.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".eslintrc.json"',title:'".eslintrc.json"'},'{\n  "extends": "eslint:recommended",\n  "parserOptions": {\n    "ecmaVersion": "latest",\n    "sourceType": "module"\n  },\n  "env": {\n    "browser": true,\n    "node": true,\n    "es2021": true,\n    // highlight-start\n    "jest": true\n    // highlight-end\n  },\n  "rules": {\n    "array-bracket-spacing": [2, "always"],\n    "no-const-assign": 2,\n    "no-var": "error",\n    "indent": [2, 2],\n    "quotes": [2, "backtick"],\n    "eqeqeq": "error"\n  }\n}\n')),(0,r.kt)("h3",{id:"write-new-tests"},"Write New Tests"),(0,r.kt)("p",null,"We will be testing the Logic of the Rock-Paper-Scissors game, or ",(0,r.kt)("inlineCode",{parentName:"p"},"RockPaperScissors")," class."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We will be testing the ",(0,r.kt)("inlineCode",{parentName:"li"},"determinesWinner")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"generateCPUResponse")," functions.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Create a new file: ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/3.rock_paper_scissors-logic.test.js")," file."),(0,r.kt)("li",{parentName:"ol"},"on the top, import the Rock Paper Scissors class (now that it's modularized)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="3.rock_paper_scissors-logic.test.js"',title:'"3.rock_paper_scissors-logic.test.js"'},"const { RockPaperScissors } = require(`../resources/scripts/rock_paper_scissors.js`);\n\ndescribe(`RockPaperScissors class`, function () {\n  describe(`determineWinner()`, function () {\n    test(`win cases`, function () {\n      const game = new RockPaperScissors();\n      expect(game.determineWinner(`rock`, `scissors`)).toBe(`win`);\n      // Complete the test\n    });\n\n    test(`tie cases`, function () {\n      // Write your test here\n    });\n\n    test(`lost cases`, function () {\n      // Write your test here\n    });\n  });\n});\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Try running the tests using ",(0,r.kt)("inlineCode",{parentName:"li"},"npm test")," and make sure your new tests are passing.")),(0,r.kt)("h2",{id:"improving-the-developer-experience-with-vscode-extensions"},"Improving the Developer Experience with VSCode Extensions"),(0,r.kt)("p",null,"Before we create more tests, let's try to streamline the process of writing and running tests.\n7. Install the ",(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest"},"VScode Jest Extension"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This will always run the tests in watch mode and show the result of the test in the side bar as well as next to each test.")),(0,r.kt)("h2",{id:"write-more-tests-with-mocks"},"Write more tests with Mocks"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Math.random()")," function is a random number generator. It's a function that returns a number between 0 and 1. and the result of it is .. Well, Random!"),(0,r.kt)("p",null,"It's difficult to test the ",(0,r.kt)("inlineCode",{parentName:"p"},"generateCPUResponse")," function because it uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"Math.random"),", leading to a different response every time. (it's not exactly a pure function)."),(0,r.kt)("p",null,"What we'll try to do here, is to hijack the ",(0,r.kt)("inlineCode",{parentName:"p"},"Math.random()")," function and mock it to return a specific value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="3.rock_paper_scissors-logic.test.js"',title:'"3.rock_paper_scissors-logic.test.js"'},"const { RockPaperScissors } = require(`../resources/scripts/rock_paper_scissors.js`);\n// highlight-next-line\nconst mathRandomSpy = jest.spyOn(Math, `random`);\n\n\ndescribe(`RockPaperScissors class`, function () {\n  describe(`determineWinner()`, function () {\n    test(`win cases`, function () {\n      const game = new RockPaperScissors();\n      expect(game.determineWinner(`rock`, `scissors`)).toBe(`win`);\n      // Complete the test\n    });\n\n    test(`tie cases`, function () {\n      // Write your test here\n    });\n\n    test(`lost cases`, function () {\n      // Write your test here\n    });\n  });\n\n  // highlight-start\n  describe(`generateCPUResponse()`, function () {\n    it(`Math.Random = 0.1 -> Rock`, function() {\n      mathRandomSpy.mockImplementation(() => 0.1);\n      const game = new RockPaperScissors();\n      expect(game.generateCPUResponse()).toBe(`rock`);\n    });\n\n    it(`Math.Random = 0.5 -> Paper`, function() {\n      // Write your test here\n    });\n\n    it(`Math.Random = 0.9 -> Paper`, function() {\n      // Write your test here\n    });\n\n  });\n// highlight-end\n});\n")))}p.isMDXComponent=!0}}]);